<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mingle.mapper.RequestMapper">
	<insert id ="requestInsert" parameterType="com.project.mingle.vo.RequestVO" useGeneratedKeys="true" keyProperty="request_no">
	    insert into request(request_name, user_id, request_type, request_comment, request_writedate)
	    values(#{request_name}, #{user_id}, #{request_type}, #{request_comment}, #{request_writedate})
    </insert>
    <insert id="requestFileInsert" parameterType="java.util.List">
	    <if test="list != null or !list.isEmpty()">
		    <foreach item="item" collection="list" open="insert into request_datafile(request_no, request_datafile_dataname) values"
				separator=",">
				(${item.request_no}, #{item.request_datafile_dataname})
			</foreach>
	    </if>
	</insert>
	<select id="requestSelect" resultType="com.project.mingle.vo.RequestVO">
	    SELECT
	        r.request_no,
	        r.request_name,
	        r.request_type,
	        r.request_comment,
	        r.user_id,
	        r.request_writedate,
	        u.user_img,
	        u.user_nick
	    FROM
	        request r
	    JOIN
	        users u ON r.user_id = u.user_id
	    WHERE
	        r.request_no = #{param1}
	</select>
	<select id="requestList" resultType="com.project.mingle.vo.RequestVO">
	    SELECT
	        r.request_no,
	        r.request_name,
	        r.user_id,
	        r.request_writedate,
	        u.user_img,
	        u.user_nick,
	        r.request_comment
	    FROM
	        request r
	    JOIN
	        users u ON r.user_id = u.user_id
	    ORDER BY
	        r.request_writedate DESC
	    LIMIT #{onePageRecord} OFFSET ${offsetPoint};
	</select>
	<select id="getImgFile" resultType="com.project.mingle.vo.RequestFileVO">
		select request_no, request_datafile_dataname from request_datafile order by request_no desc;
	</select>
	<insert id ="replyInsert">
		insert into request_reply (request_no, user_id, request_reply_comment) 
		values(${request_no}, #{user_id}, #{request_reply_comment})
	</insert>
	<select id="replySelect" resultType="com.project.mingle.vo.RequestVO">
	    SELECT
	        rr.request_reply_no,
	        rr.request_no,
	        rr.request_reply_comment,
	        rr.user_id,
	        rr.request_reply_writedate,
	        u.user_img,
	        u.user_nick
	    FROM
	        request_reply rr
	    JOIN
	        users u ON rr.user_id = u.user_id
	    WHERE
	        rr.request_no = #{param1}
	    ORDER BY
	        rr.request_reply_no DESC;
	</select>
	<update id ="replyUpdate">
		update request_reply set request_reply_comment=#{request_reply_comment} 
		where request_reply_no=${request_reply_no}
	</update>
	<delete id ="replyDelete">
		delete from request_reply where request_reply_no=${param1}
	</delete>
</mapper>